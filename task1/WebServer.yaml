AWSTemplateFormatVersion: '2010-09-09'
Description: 'Windows Web Server with S3 Logging Bucket'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where the EC2 instance will be launched

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet for the EC2 instance

  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of existing EC2 KeyPair for Windows instance access

  AllowedRDPCidr:
    Type: String
    Description: CIDR block allowed for RDP access
    Default: 0.0.0.0/0
    AllowedPattern: '^(\d{1,3}\.){3}\d{1,3}/\d{1,2}$'

Resources:
  WebServerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: S3LoggingAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub ${LogBucket.Arn}/*

  WebServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref WebServerInstanceRole

  LogBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  LogBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LogBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt WebServerInstanceRole.Arn
            Action:
              - s3:PutObject
              - s3:GetObject
            Resource: !Sub ${LogBucket.Arn}/*
  
  ALBSecurityGroup:
    Ty/pe: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Windows web server
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: !Ref AllowedRDPCidr
      Tags:
        - Key: Name
          Value: WebServer-SecurityGroup
  
  # ACM Certificate
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS

  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c2b0d3fb02824d92  # Windows Server 2019 Base - Update with appropriate AMI for your region
      InstanceType: t3.medium
      SubnetId: !Ref SubnetId
      KeyName: !Ref KeyPairName
      IamInstanceProfile: !Ref WebServerInstanceProfile
      SecurityGroupIds: 
        - !Ref WebServerSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          # Install IIS
          Import-Module ServerManager
          Install-WindowsFeature Web-Server -IncludeAllSubFeature
          
          # Create a simple webpage
          $website = @"
          <!DOCTYPE html>
          <html>
          <head><title>Welcome</title></head>
          <body>
          <h1>Welcome to our web server</h1>
          </body>
          </html>
          "@
          $website | Out-File -FilePath C:\inetpub\wwwroot\index.html -Encoding UTF8
          </powershell>
      Tags:
        - Key: Name
          Value: Windows-WebServer

Outputs:
  WebServerIP:
    Description: Public IP address of the web server
    Value: !GetAtt WebServerInstance.PublicIp

  LogBucketName:
    Description: Name of the S3 bucket for logs
    Value: !Ref LogBucket

  SecurityGroupId:
    Description: ID of the security group
    Value: !Ref WebServerSecurityGroup
